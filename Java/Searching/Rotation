class Solution {
    public static int getMin(int arr[],int low,int high)
    {
        while(low<=high)
        {
            int mid=(low+high)/2;
            if(mid==arr.length-1 && arr[mid]<arr[mid-1])
            {
                return mid;
            }
            else if(mid!=0 && mid!=arr.length-1
            && arr[mid]<arr[mid-1] 
            && arr[mid]<arr[mid+1])
            {
                return mid;
            }
            if(arr[mid]>=arr[low])
            {
                if(arr[low]<arr[high])
                {
                    return low;
                }
                else
                {
                    low=mid+1;
                }
            }
            else if(arr[mid]<=arr[high])
            {
                high=mid-1;
            }
        }
        return -1;
    }
    int findKRotation(int arr[], int n) {
        // code here
        if(n==1)
        {
            return 0;
        }
        int minindex=getMin(arr,0,n-1);
        return minindex-0;
    }
}
